//      *********    DO NOT MODIFY THIS FILE     *********
//      This file is regenerated by a design tool. Making
//      changes to this file can cause errors.
namespace Expression.Blend.SampleData.DataXMLSampleDataSource
{
	using System; 
	using System.ComponentModel;

// To significantly reduce the sample data footprint in your production application, you can set
// the DISABLE_SAMPLE_DATA conditional compilation constant and disable sample data at runtime.
#if DISABLE_SAMPLE_DATA
	internal class MyApp { }
#else

	public class MyApp : INotifyPropertyChanged
	{
		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void OnPropertyChanged(string propertyName)
		{
			if (this.PropertyChanged != null)
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		public MyApp()
		{
			try
			{
				Uri resourceUri = new Uri("/ADV;component/SampleData/DataXMLSampleDataSource/DataXMLSampleDataSource.xaml", UriKind.RelativeOrAbsolute);
				System.Windows.Application.LoadComponent(this, resourceUri);
			}
			catch
			{
			}
		}

		private AppCollection _AppCollection = new AppCollection();

		public AppCollection AppCollection
		{
			get
			{
				return this._AppCollection;
			}
		}
	}

	public class App : INotifyPropertyChanged
	{
		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void OnPropertyChanged(string propertyName)
		{
			if (this.PropertyChanged != null)
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		private string _Title = string.Empty;

		public string Title
		{
			get
			{
				return this._Title;
			}

			set
			{
				if (this._Title != value)
				{
					this._Title = value;
					this.OnPropertyChanged("Title");
				}
			}
		}

		private string _Publisher = string.Empty;

		public string Publisher
		{
			get
			{
				return this._Publisher;
			}

			set
			{
				if (this._Publisher != value)
				{
					this._Publisher = value;
					this.OnPropertyChanged("Publisher");
				}
			}
		}

		private string _Description = string.Empty;

		public string Description
		{
			get
			{
				return this._Description;
			}

			set
			{
				if (this._Description != value)
				{
					this._Description = value;
					this.OnPropertyChanged("Description");
				}
			}
		}

		private System.Windows.Media.ImageSource _AppImage = null;

		public System.Windows.Media.ImageSource AppImage
		{
			get
			{
				return this._AppImage;
			}

			set
			{
				if (this._AppImage != value)
				{
					this._AppImage = value;
					this.OnPropertyChanged("AppImage");
				}
			}
		}

		private System.Windows.Media.ImageSource _ScreenShot = null;

		public System.Windows.Media.ImageSource ScreenShot
		{
			get
			{
				return this._ScreenShot;
			}

			set
			{
				if (this._ScreenShot != value)
				{
					this._ScreenShot = value;
					this.OnPropertyChanged("ScreenShot");
				}
			}
		}
	}

	public class AppCollection : System.Collections.ObjectModel.ObservableCollection<App>
	{ 
	}
#endif
}
